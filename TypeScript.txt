1.基础数据类型
    string、number和boolean
    例子： let price:number = 1; let price:string= "1"; let price:boolean= true;

2.数组、对象
数组
写法一：
let arr:number[] =[1,2,3]
写法二：泛型
let arr:Array<number> =[1,2,3]

对象
let obj:object={}

3. 任何类型 any
let price:any ="dsd";  let price:any =1;

3.void 空值，表示没有任何返回值的函数
function test():void{

}

4. 类型推断 如果声明变量是对变量进行了赋值，则会拥有一个内置属性，赋值的值是什么类型就赋值了什么类型

5.联合类型 
let price:string|number|boolean ="1"

6. 对象的类型 接口
interface Person {
  name: string;
  age: number;
  xPos?: number;//？为可选对象
}
 
function greet(person: Person) {
  return "Hello " + person.name;
}
console.log(greet('张三',1))

7.函数类型 接口
interface ShearcFun {
 (a:string,b:string):boolean
}
const fun1: ShearcFun= function(a:string,b:string):boolean{
    return true
}

8.类型别名 使用type声明 例如 type s= string;

9.字符串字面量类型 例如 type stringType = ‘1’|‘2’ 赋值只能是1或2

10.元组Tuple
let Tarr:[number,string] =[123,'ewe']

11.枚举 给一组数值赋予名称
enum numberType{
    
}


